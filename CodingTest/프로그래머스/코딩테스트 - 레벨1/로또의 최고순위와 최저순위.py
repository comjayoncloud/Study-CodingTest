def solution(lottos, win_nums):

    zeros = lottos.count(0)               # 리스트에서 0의 개수 세기
    win = 0                               # win 변수 = 맞춘 개수 (0으로 초기화)
    scores = {0: 6, 1: 6, 2: 5, 3: 4,     # ★ 포인트1. 경우의 수가 7개 밖에 없으므로
              4: 3, 5: 2, 6: 1}           #           각각의 맞춘 개수에 순위 할당하기
                                          # ★ 포인트2. 0개 맞은 순위 = 1개 맞은 순위
    
    for l in lottos:                    
        if l in win_nums:
            win += 1
    
    most = win + zeros                    # 맞춘 번호 + 0이 다 맞았다고 가정 -> 최고 순위
    least = win                           # 0이 다 틀렸다고 가정 -> 최저 순위
    return [scores[most], scores[least]]



# solution([0, 0, 0, 0, 0, 0]	,[38, 19, 20, 40, 15, 25])
# solution([44, 1, 0, 0, 31, 25],[31, 10, 45, 1, 6, 19])
# solution([45, 4, 35, 20, 3, 9],[20, 9, 3, 45, 4, 35])
solution([1, 2, 3, 4, 5, 6],[7, 8, 9, 10, 11, 12])
"""

걸린시간 : 20분

생각한 해결방안 :
    1순위 6개 일치
    2순위 5개 일치
    3순위 4개 일치
    4순위 3개 일치
    5순위 2개 일치
    6(낙첨) 그외
    순서 상관없음. 일치만하면됨
    알아볼수없는 번호는 0
    아웃풋은 [최고순위,최저순위]
    0이 나올땐 맞는걸로 치자.
    1. count로 몇개 있는지 확인. 0 개수만큼 count +1
    
틀린점 :
    없음

다른사람코드 및 리뷰 :
    주석 참고
"""